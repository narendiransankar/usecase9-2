name: EKS deployment python app

on:
 workflow_dispatch:
  #push:
    # paths:
    #   - 'usecase-9/**'
    #   - '.github/workflows/deploy_uc5.yml'
    # branches: main
env:
  AWS_REGION: us-east-1
  EKS_REPO: 012889719104.dkr.ecr.ap-south-1.amazonaws.com/api-flask-repo

  
permissions:
  id-token: write
  contents: write

jobs:
  terraform-usecase-9:
    runs-on: ubuntu-latest

    # defaults:
    #   run:
    #     working-directory: usecase-9

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
      
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: arn:aws:iam::012889719104:role/oidc_role
          aws-region: ap-south-1


     
    
      - name: Run implement terraform
        run: |
          pwd
          terraform init
          terraform fmt -recursive
          terraform validate
          terraform plan -var-file=terraform.tfvars
          terraform apply -var-file=terraform.tfvars -auto-approve
          #terraform destroy -var-file=terraform.tfvars -auto-approve

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build Docker image
        run: |
           pwd
           docker build -t api-flask-repo .
           docker images
           ocker tag api-flask-repo:latest 012889719104.dkr.ecr.ap-south-1.amazonaws.com/api-flask-repo:latest
           docker push 012889719104.dkr.ecr.ap-south-1.amazonaws.com/api-flask-repo:latest


      - name: Configure kubeconfig
        run: |
         aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster


      - name: Deploy to EKS Cluster
        run: |
           pwd
           kubectl apply -f ./Api-Flask/deployment.yaml
           kubectl apply -f ./Api-Flask/service.yaml
           kubectl get deployment
           kubectl get pods
           kubectl get svc -o wide
